// Code generated by mockery v0.0.0-dev. DO NOT EDIT.

package mocks

import (
	object "ebanx/challenge/domain/object"

	mock "github.com/stretchr/testify/mock"
)

// AccountRepository is an autogenerated mock type for the AccountRepository type
type AccountRepository struct {
	mock.Mock
}

// Deposit provides a mock function with given fields: _a0, _a1
func (_m *AccountRepository) Deposit(_a0 string, _a1 float64) *object.Balance {
	ret := _m.Called(_a0, _a1)

	var r0 *object.Balance
	if rf, ok := ret.Get(0).(func(string, float64) *object.Balance); ok {
		r0 = rf(_a0, _a1)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*object.Balance)
		}
	}

	return r0
}

// GetBalance provides a mock function with given fields: _a0
func (_m *AccountRepository) GetBalance(_a0 string) (*object.Balance, error) {
	ret := _m.Called(_a0)

	var r0 *object.Balance
	if rf, ok := ret.Get(0).(func(string) *object.Balance); ok {
		r0 = rf(_a0)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*object.Balance)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(string) error); ok {
		r1 = rf(_a0)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// Reset provides a mock function with given fields:
func (_m *AccountRepository) Reset() {
	_m.Called()
}

// Withdraw provides a mock function with given fields: _a0, _a1
func (_m *AccountRepository) Withdraw(_a0 string, _a1 float64) (*object.Balance, error) {
	ret := _m.Called(_a0, _a1)

	var r0 *object.Balance
	if rf, ok := ret.Get(0).(func(string, float64) *object.Balance); ok {
		r0 = rf(_a0, _a1)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*object.Balance)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(string, float64) error); ok {
		r1 = rf(_a0, _a1)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}
